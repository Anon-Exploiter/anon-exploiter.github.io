<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Umar_0x01 – Pentester | Programmer | Your average sakurity guy ( ͡~ ͜ʖ ͡°)</title>
    
    
    
    <link>https://umar0x01.sh/</link>
    <description>Recent content on Umar_0x01 – Pentester | Programmer | Your average sakurity guy ( ͡~ ͜ʖ ͡°)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://umar0x01.sh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyCode Testing</title>
      <link>https://umar0x01.sh/post/pycode-testing/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://umar0x01.sh/post/pycode-testing/</guid>
      <description>
        
          &lt;img src=&#34;https://umar0x01.sh/img/hello.jpg&#34;/&gt;
          
        
        
        &lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Hello, friend?&amp;rdquo; That&amp;rsquo;s lame.
Maybe I should give you a name&amp;hellip;
But that&amp;rsquo;s a slippery slope.
You&amp;rsquo;re only in my head.
We have to remember that&amp;hellip;
Shit.
It&amp;rsquo;s actually happened.
I&amp;rsquo;m talking to an imaginary person.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;— Mr. Robot S01E01&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;python&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;GetStatus snippet&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-python&#34; &gt;&lt;code&gt;
#!/usr/bin/python3

&amp;#34;&amp;#34;&amp;#34;
For printing the status of both down, up and non-existent hosts/URLs (has no DNS records or the instance/application/server hosting the URL/host went down). Wrote this since I wasn&amp;#39;t able to find this functionality in some commonly known open-source scripts. In some cases, one needs the hosts which are down too! (e.g. elasticbeanstalk applications, etc.)

chmod &amp;#43;x getStatus
sudo mv getStatus /usr/bin/

- For fetching URLs/host which are only up
	cat urlsList | getStatus

	cat urlsList | getStatus --down

- Note:
	The inputted urls shouldn&amp;#39;t have http/https appended, the format should only be: www.google.com || google.com
&amp;#34;&amp;#34;&amp;#34;

import requests
from bs4 import BeautifulSoup
import sys
import concurrent.futures
import dns.resolver

cyan 	= &amp;#34;\033[0;96m&amp;#34;
green 	= &amp;#34;\033[0;92m&amp;#34;
white 	= &amp;#34;\033[0;97m&amp;#34;
red 	= &amp;#34;\033[0;91m&amp;#34;
blue 	= &amp;#34;\033[0;94m&amp;#34;
yellow 	= &amp;#34;\033[0;33m&amp;#34;
magenta = &amp;#34;\033[0;35m&amp;#34;

def fetchUrls():
	userInput 	= sys.stdin
	urls 		= []

	for lines in userInput:
		lines 	= lines.strip()
		if lines != &amp;#34;&amp;#34;:
			urls.append(lines)

	return(urls)

def returnRequestStatus(url, spacing):
	requestTimeout  = 0.5
	reqUrl 			= f&amp;#34;http://{url}&amp;#34;

	try:
		response 	= requests.get(reqUrl, timeout=requestTimeout, allow_redirects=True)
		respCode 	= str(response.status_code)
		respText 	= response.text
		respLen 	= str(len(respText))

		try:
			title 	= BeautifulSoup(respText, &amp;#39;html.parser&amp;#39;).find_all(&amp;#39;title&amp;#39;)[0].text.strip()
			print(&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} | {}{}{}&amp;#34;.format(yellow, respCode, white,
				magenta, respLen, white,
				green, &amp;#34;UP&amp;#34;, white,
				cyan, url, spacing, white,
				blue, title, white,
			))

		except IndexError:
			print(&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} |&amp;#34;.format(yellow, respCode, white,
				magenta, respLen, white,
				green, &amp;#34;UP&amp;#34;, white,
				cyan, url, spacing, white,
			))

	except requests.exceptions.ConnectionError:
		try:
			if sys.argv[1] != &amp;#39;--down&amp;#39;:
				pass

		except IndexError:
			print(&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} |&amp;#34;.format(red, &amp;#34;0&amp;#34;,  white,
				red, &amp;#34;0&amp;#34;, white,
				red, &amp;#34;DOWN&amp;#34;, white,
				red, url, spacing, white,
			))

def getDNSRecords(host):
	answers 	= &amp;#34;&amp;#34;

	try:
		resolver 	= dns.resolver.Resolver()
		resolver.timeout = 1
		resolver.lifetime = 1

		answers 	= resolver.query(host,&amp;#39;CNAME&amp;#39;)[::-1][0].target
		# print(answers)

	except dns.resolver.NXDOMAIN: 	# Has no domain records
		answers 	= host
		pass

	except dns.resolver.NoAnswer: 	# Has A/other records, not CNAME
		pass

	except dns.resolver.NoNameservers: # Wasn&amp;#39;t able to resolve due to some reason
		pass

	except dns.exception.Timeout: 	# Timeout in case it can&amp;#39;t reach the server
		pass

	return([host, str(answers)])

def main():
	processes 		= 50
	urls 			= fetchUrls()

	hosts 		= []
	cnames 		= []

	# for url in urls:
	# 	getDNSRecords(url)

	with concurrent.futures.ProcessPoolExecutor(max_workers=processes) as executor:
		for results in executor.map(getDNSRecords, urls):
			if results[1] != &amp;#34;&amp;#34;:
				hosts.append(results[0])
				cnames.append(results[1])

	len1 	= max(len(_len) for _len in hosts) &amp;#43; 8
	len2 	= max(len(_len) for _len in cnames) &amp;#43; 8
	bar 	= &amp;#34;-&amp;#34; * (len1 &amp;#43; len2)

	print(bar)
	print(&amp;#34;{:&amp;lt;{}} | {}&amp;#34;.format(&amp;#34;Host&amp;#34;, (len1), &amp;#34;Resolved CNAME Record&amp;#34;))
	print(bar)

	for host, cname in zip(hosts, cnames):
		print(&amp;#34;{}{:&amp;lt;{}}{} | {}{}&amp;#34;.format(cyan, host, len1, white,
			green, cname &amp;#43; white
		))

	print(bar)

	print(&amp;#34;\n\n\n\n\n\n\n&amp;#34;)

	biggestLength 	= max(len(_len) for _len in cnames) &amp;#43; 8
	bar 			= &amp;#34;-&amp;#34; * (80 &amp;#43; biggestLength &amp;#43; 20)
	print(bar)
	print(&amp;#34;{:&amp;lt;20} | {:&amp;lt;20} | {:&amp;lt;20} | {:&amp;lt;{}} | {}&amp;#34;.format(&amp;#34;Response Code&amp;#34;, &amp;#34;Response Length&amp;#34;, &amp;#34;Status&amp;#34;, &amp;#34;Host&amp;#34;, biggestLength, &amp;#34;Title&amp;#34;))
	print(bar)

	# for hosts in cnames:
	# 	returnRequestStatus(hosts, biggestLength)

	with concurrent.futures.ProcessPoolExecutor(max_workers=processes) as executor:
		executor.map(returnRequestStatus, cnames, [biggestLength] * len(cnames))
	
	print(bar)

if __name__ == &amp;#39;__main__&amp;#39;:
	main()
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;



        
        </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://umar0x01.sh/about/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://umar0x01.sh/about/</guid>
      <description>
        
          
          
          
        
        
        &lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;My name is Radek and I&amp;rsquo;m the author of this theme. I made it to help you present your ideas easier.&lt;/p&gt;
&lt;p&gt;We all know how hard is to start something on the web, especially these days. You need to prepare a bunch of stuff, configure them and when that’s done — create the content.&lt;/p&gt;
&lt;p&gt;This theme is pretty basic and covers all of the essentials. All you have to do is start typing!&lt;/p&gt;
&lt;p&gt;The theme includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;light/dark mode&lt;/strong&gt;, depending on your preferences&lt;/li&gt;
&lt;li&gt;great reading experience thanks to &lt;a href=&#34;https://rsms.me/inter/&#34;&gt;&lt;strong&gt;Inter UI font&lt;/strong&gt;&lt;/a&gt;, made by &lt;a href=&#34;https://rsms.me/about/&#34;&gt;Rasmus Andersson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nice code highlighting thanks to &lt;a href=&#34;https://prismjs.com&#34;&gt;&lt;strong&gt;PrismJS&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, there you have it&amp;hellip; enjoy!&lt;/p&gt;

        
        </description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://umar0x01.sh/showcase/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://umar0x01.sh/showcase/</guid>
      <description>
        
          
          
          
        
        
        &lt;h2 id=&#34;header-2&#34;&gt;Header 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. &lt;strong&gt;Donec quis dolor nec nunc mollis interdum vel in purus&lt;/strong&gt;. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fusce pharetra suscipit orci nec tempor. Quisque vitae sem sit amet sem mollis consequat. Sed at imperdiet lorem. Vestibulum pharetra faucibus odio, ac feugiat tellus sollicitudin at. Pellentesque varius tristique mi imperdiet dapibus. Duis orci odio, sodales lacinia venenatis sit amet, feugiat et diam.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;header-3&#34;&gt;Header 3&lt;/h3&gt;
&lt;p&gt;Nulla libero turpis, lacinia vitae cursus ut, auctor dictum nisl. Fusce varius felis nec sem ullamcorper, at convallis nisi vestibulum. Duis risus odio, porta sit amet placerat mollis, tincidunt non mauris. Suspendisse fringilla, &lt;code&gt;odio a dignissim pharetra&lt;/code&gt;, est urna sollicitudin urna, eu scelerisque magna ex vitae tellus.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* PostCSS code */&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#1a1a1d&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;overflow&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;

  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@media&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(--phone)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;white-space&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;wrap&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;word-wrap&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;break-word&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#f92672&#34;&gt;code&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#ccc&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inherit&lt;/span&gt;;
  }
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// JS code
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.menu-trigger&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.menu&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mobileQuery&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getComputedStyle&lt;/span&gt;(document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;getPropertyValue&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--phoneWidth&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;matchMedia&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;mobileQuery&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;matches&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt;())
  &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt;())
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt;()

&lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;, () =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;))

window.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;resize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- HTML code --&amp;gt;&lt;/span&gt;

&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;{{ .Title }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    {{ range .Pages }}
      {{ .Render &amp;#34;summary&amp;#34;}}
    {{ end }}
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;header-4&#34;&gt;Header 4&lt;/h4&gt;
&lt;p&gt;Curabitur scelerisque felis viverra varius scelerisque. Ut enim libero, molestie gravida blandit at, mollis ornare tellus. Cras arcu mi, ultrices vel pulvinar vel, volutpat eu tortor. Nullam nec eros quis massa ultrices iaculis sed in metus. Praesent sollicitudin sem sit amet orci tempor gravida.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maecenas elementum vitae nibh vitae porttitor.&lt;/li&gt;
&lt;li&gt;Aenean consequat, risus ut cursus placerat, arcu nulla sodales risus, ut molestie tellus tellus et dui.&lt;/li&gt;
&lt;li&gt;Integer imperdiet turpis vitae lacus imperdiet, ut ornare ligula auctor. Integer in mi eu velit vehicula suscipit eget vulputate nulla.&lt;/li&gt;
&lt;li&gt;Etiam vitae enim quis velit lobortis placerat a ut sem.
&lt;ul&gt;
&lt;li&gt;Curabitur lobortis ante sit amet orci pulvinar, sollicitudin viverra nunc accumsan.&lt;/li&gt;
&lt;li&gt;Praesent fermentum orci quis leo facilisis posuere.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aliquam erat volutpat. In hac habitasse platea dictumst. Nunc ut tincidunt mauris. Sed at gravida risus, id semper magna. Nullam vitae enim mattis, sodales neque non, pharetra elit. Cras sit amet sagittis augue, et finibus turpis. Ut tempus tincidunt diam vel pharetra. Nulla porttitor odio sit amet nulla scelerisque, quis aliquam mi imperdiet. Sed tincidunt dui vel tellus vestibulum rhoncus. Donec tempus ultrices velit.&lt;/p&gt;

        
        </description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>https://umar0x01.sh/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://umar0x01.sh/archive/</guid>
      <description>
        
          
          
          
        
        
        
        
        </description>
    </item>
    
  </channel>
</rss>