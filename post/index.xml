<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Umar_0x01 – Pentester | Programmer | Your average sakurity guy ( ͡~ ͜ʖ ͡°)</title>
    
    
    
    <link>https://umar0x01.sh/post/</link>
    <description>Recent content in Posts on Umar_0x01 – Pentester | Programmer | Your average sakurity guy ( ͡~ ͜ʖ ͡°)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://umar0x01.sh/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyCode Testing</title>
      <link>https://umar0x01.sh/post/hello/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://umar0x01.sh/post/hello/</guid>
      <description>
        
          &lt;img src=&#34;https://umar0x01.sh/img/hello.jpg&#34;/&gt;
          
        
        
        &lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Hello, friend?&amp;rdquo; That&amp;rsquo;s lame.
Maybe I should give you a name&amp;hellip;
But that&amp;rsquo;s a slippery slope.
You&amp;rsquo;re only in my head.
We have to remember that&amp;hellip;
Shit.
It&amp;rsquo;s actually happened.
I&amp;rsquo;m talking to an imaginary person.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;— Mr. Robot S01E01&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/python3&lt;/span&gt;

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;For printing the status of both down, up and non-existent hosts/URLs (has no DNS records or the instance/application/server hosting the URL/host went down). Wrote this since I wasn&amp;#39;t able to find this functionality in some commonly known open-source scripts. In some cases, one needs the hosts which are down too! (e.g. elasticbeanstalk applications, etc.)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;chmod +x getStatus
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;sudo mv getStatus /usr/bin/
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;- For fetching URLs/host which are only up
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	cat urlsList | getStatus
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	cat urlsList | getStatus --down
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;- Note:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	The inputted urls shouldn&amp;#39;t have http/https appended, the format should only be: www.google.com || google.com
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bs4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BeautifulSoup
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; concurrent.futures
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dns.resolver

cyan 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;96m&amp;#34;&lt;/span&gt;
green 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;92m&amp;#34;&lt;/span&gt;
white 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;97m&amp;#34;&lt;/span&gt;
red 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;91m&amp;#34;&lt;/span&gt;
blue 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;94m&amp;#34;&lt;/span&gt;
yellow 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;33m&amp;#34;&lt;/span&gt;
magenta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[0;35m&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchUrls&lt;/span&gt;():
	userInput 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin
	urls 		&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; lines &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; userInput:
		lines 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lines&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lines &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
			urls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(lines)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(urls)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;returnRequestStatus&lt;/span&gt;(url, spacing):
	requestTimeout  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;
	reqUrl 			&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://{url}&amp;#34;&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
		response 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(reqUrl, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;requestTimeout, allow_redirects&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
		respCode 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status_code)
		respText 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
		respLen 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(len(respText))

		&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
			title 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(respText, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html.parser&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
			&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} | {}{}{}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(yellow, respCode, white,
				magenta, respLen, white,
				green, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt;, white,
				cyan, url, spacing, white,
				blue, title, white,
			))

		&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IndexError&lt;/span&gt;:
			&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} |&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(yellow, respCode, white,
				magenta, respLen, white,
				green, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt;, white,
				cyan, url, spacing, white,
			))

	&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConnectionError:
		&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--down&amp;#39;&lt;/span&gt;:
				&lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

		&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IndexError&lt;/span&gt;:
			&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;20}{} | {}{:&amp;lt;{}}{} |&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(red, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,  white,
				red, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;, white,
				red, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DOWN&amp;#34;&lt;/span&gt;, white,
				red, url, spacing, white,
			))

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getDNSRecords&lt;/span&gt;(host):
	answers 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
		resolver 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Resolver()
		resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lifetime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

		answers 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(host,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CNAME&amp;#39;&lt;/span&gt;)[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target
		&lt;span style=&#34;color:#75715e&#34;&gt;# print(answers)&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; dns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NXDOMAIN: 	&lt;span style=&#34;color:#75715e&#34;&gt;# Has no domain records&lt;/span&gt;
		answers 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; host
		&lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; dns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NoAnswer: 	&lt;span style=&#34;color:#75715e&#34;&gt;# Has A/other records, not CNAME&lt;/span&gt;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; dns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resolver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NoNameservers: &lt;span style=&#34;color:#75715e&#34;&gt;# Wasn&amp;#39;t able to resolve due to some reason&lt;/span&gt;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; dns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exception&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Timeout: 	&lt;span style=&#34;color:#75715e&#34;&gt;# Timeout in case it can&amp;#39;t reach the server&lt;/span&gt;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;([host, str(answers)])

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
	processes 		&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
	urls 			&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fetchUrls()

	hosts 		&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
	cnames 		&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

	&lt;span style=&#34;color:#75715e&#34;&gt;# for url in urls:&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# 	getDNSRecords(url)&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; concurrent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;futures&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ProcessPoolExecutor(max_workers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;processes) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; executor:
		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map(getDNSRecords, urls):
			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; results[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
				hosts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(results[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
				cnames&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(results[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])

	len1 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(len(_len) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _len &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; hosts) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
	len2 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(len(_len) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _len &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cnames) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
	bar 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (len1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; len2)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{:&amp;lt;{}} | {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;, (len1), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Resolved CNAME Record&amp;#34;&lt;/span&gt;))
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; host, cname &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(hosts, cnames):
		&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}{:&amp;lt;{}}{} | {}{}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(cyan, host, len1, white,
			green, cname &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; white
		))

	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n\n\n\n\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)

	biggestLength 	&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(len(_len) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _len &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cnames) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
	bar 			&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; biggestLength &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{:&amp;lt;20} | {:&amp;lt;20} | {:&amp;lt;20} | {:&amp;lt;{}} | {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Response Code&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Response Length&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Status&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;, biggestLength, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Title&amp;#34;&lt;/span&gt;))
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)

	&lt;span style=&#34;color:#75715e&#34;&gt;# for hosts in cnames:&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# 	returnRequestStatus(hosts, biggestLength)&lt;/span&gt;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; concurrent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;futures&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ProcessPoolExecutor(max_workers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;processes) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; executor:
		executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map(returnRequestStatus, cnames, [biggestLength] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; len(cnames))
	
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(bar)

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
	main()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
        </description>
    </item>
    
  </channel>
</rss>